{"version":3,"sources":["Search.js","App.js","index.js"],"names":["Search","state","city","displayCity","temperature","humidity","conditions","feelsLike","imgUrl","handleClick","bind","handleChange","fetch","this","then","response","ok","json","Error","statusText","jsonData","mainData","main","console","log","icon","weather","imgUrlCurrent","setState","name","temp","feels_like","description","catch","error","e","target","value","id","src","type","placeholder","onChange","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"qTAoGeA,G,wDAhGX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,KAAM,GACNC,YAAa,eACbC,YAAa,GACbC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,OAAQ,wDAGZ,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAbV,E,0DAgBC,IAAD,OACVE,MAAM,qDAAD,OAAsDC,KAAKZ,MAAMC,KAAjE,2DACAY,MAAK,SAAAC,GACF,GAAKA,EAASC,GAGV,OAAOD,EAASE,OAFhB,MAAMC,MAAMH,EAASI,eAK5BL,MAAK,SAAAM,GACF,IAAIC,EAAWD,EAASE,KACxBC,QAAQC,IAAIJ,GACZ,IAAIK,EAAOL,EAASM,QAAQ,GAAGD,KAC3BE,EAAa,4CAAwCF,EAAxC,WAEjB,EAAKG,SAAS,CACVzB,YAAY,cAAD,OAAgBiB,EAASS,KAAzB,YACXzB,YAAY,GAAD,OAAKiB,EAASS,KAAd,SACXvB,UAAU,GAAD,OAAKc,EAASU,WAAd,SACT1B,SAAS,IAAD,OAAMgB,EAAShB,SAAf,KACRC,WAAYc,EAASM,QAAQ,GAAGM,YAChCxB,OAAQmB,OAKfM,OAAM,SAAAC,GACHX,QAAQC,IAAIU,GACZ,EAAKN,SAAS,CACVzB,YAAa,iBACbC,YAAa,GACbG,UAAW,GACXF,SAAU,GACVC,WAAY,GACZE,OAAQ,U,mCAOX2B,GACTtB,KAAKe,SAAL,eAAiBO,EAAEC,OAAOP,KAAOM,EAAEC,OAAOC,U,+BAK1C,OACI,yBAAKC,GAAG,gBAEJ,yBAAKA,GAAG,eAEJ,yBAAKA,GAAG,YACHzB,KAAKZ,MAAME,aAGhB,yBAAKmC,GAAG,eACJ,yBAAKC,IAAK1B,KAAKZ,MAAMO,SACrB,+BAAKK,KAAKZ,MAAMK,WAAhB,MAGJ,4BACI,6CAAmBO,KAAKZ,MAAMG,YAA9B,KACA,0CAAgBS,KAAKZ,MAAMI,SAA3B,MACA,4CAAkBQ,KAAKZ,MAAMM,UAA7B,OAKR,yBAAK+B,GAAG,aACJ,2BAAOE,KAAK,OAAOX,KAAK,OAAOY,YAAY,YAAYJ,MAAOxB,KAAKwB,MAAOK,SAAU7B,KAAKF,eACzF,4BAAQ6B,KAAK,SAASG,QAAS9B,KAAKJ,aAApC,yB,GAxFCmC,IAAMC,YCSZC,MARf,WACE,OACE,6BACI,kBAAC,EAAD,QCDRC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.9949a773.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./Search.css\"\n\nclass Search extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            city: \"\",\n            displayCity: \"Enter A City\",\n            temperature: \"\",\n            humidity: \"\",\n            conditions: \"\",\n            feelsLike: \"\",\n            imgUrl: \"https://freesvg.org/img/sivvus_weather_symbols_3.png\"\n        }\n\n        this.handleClick = this.handleClick.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleClick() {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=imperial&APPID=e1b3deaa440b2455c127c030779cf400`)\n            .then(response => {\n                if (!response.ok) {\n                    throw Error(response.statusText)\n                } else {\n                    return response.json()\n                }\n            })\n            .then(jsonData => {\n                let mainData = jsonData.main\n                console.log(jsonData)\n                let icon = jsonData.weather[0].icon\n                let imgUrlCurrent = `https://openweathermap.org/img/wn/${icon}@2x.png`\n\n                this.setState({\n                    displayCity: `Weather in ${jsonData.name} today: `,\n                    temperature: `${mainData.temp}°F`,\n                    feelsLike: `${mainData.feels_like}°F`,\n                    humidity: ` ${mainData.humidity}%`,\n                    conditions: jsonData.weather[0].description,\n                    imgUrl: imgUrlCurrent\n                })\n\n\n            })\n            .catch(error => {\n                console.log(error)\n                this.setState({\n                    displayCity: \"City Not Found\",\n                    temperature: \"\",\n                    feelsLike: \"\",\n                    humidity: \"\",\n                    conditions: \"\",\n                    imgUrl: \"\"\n                })\n            })\n    }\n\n\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n\n    render() {\n        return (\n            <div id=\"appContainer\">\n\n                <div id=\"weatherData\">\n\n                    <div id=\"cityName\">\n                        {this.state.displayCity}\n                    </div>\n\n                    <div id=\"weatherIcon\">\n                        <img src={this.state.imgUrl}/>\n                        <p> {this.state.conditions} </p>\n                    </div>\n\n                    <ul>\n                        <li> Temperature: {this.state.temperature} </li>\n                        <li> Humidity: {this.state.humidity}  </li>\n                        <li> Feels Like: {this.state.feelsLike} </li>\n                    </ul>\n\n                </div>\n\n                <div id=\"searchBox\">\n                    <input type=\"text\" name=\"city\" placeholder=\"City Name\" value={this.value} onChange={this.handleChange} />\n                    <button type=\"submit\" onClick={this.handleClick}> Search Weather</button>\n                </div>\n\n            </div>\n        )\n    }\n}\n\n\nexport default Search","import React from 'react';\nimport './App.css';\nimport Search from \"./Search\"\n\nfunction App() {\n  return (\n    <div> \n        <Search /> \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}